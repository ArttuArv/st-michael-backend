{"version":3,"file":"static/js/647.eae541ec.chunk.js","mappings":"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","sources":["components/Togglable/TogglableElements.js","components/Togglable/index.js","components/Notification/NotificationElements.js","components/Notification/index.js","components/LoginForm/LoginFormElements.js","components/LoginForm/index.js","components/AdminPageForms/InputFormElements.js","components/AdminPageForms/NewOpeningHoursForm/index.js","components/AdminPageForms/UpdateOpeningHoursForm/index.js","components/AdminPageForms/NewBeerForm/index.js","components/AdminPageForms/NewWhiskyForm/index.js","services/login.js","services/beer.js","services/whisky.js","services/whiskyCsv.js","components/LoginPageStyledComponents/LoginPageElements.js","pages/login.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const TogglableButton = styled.button`\r\n  padding: 10px;\r\n  margin: 5px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  background: ${props => props.background === 'add' ? '#06260F' : '#84172C'};\r\n  color: gold;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    transform: scale(1.01);\r\n    box-shadow: 0 1px 3px rgba(255, 203, 5, 0.9);\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n    height: 60px;\r\n  }\r\n`;","import { useState, useImperativeHandle, forwardRef } from 'react'\r\n\r\nimport { TogglableButton } from './TogglableElements'\r\n\r\n\r\nconst Togglable = forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <TogglableButton background = 'add' onClick={toggleVisibility}>{props.buttonLabel}</TogglableButton>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <TogglableButton \r\n          background = 'light' \r\n          onClick={toggleVisibility}\r\n          >\r\n          Hylkää\r\n        </TogglableButton>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nexport default Togglable","import styled from 'styled-components';\r\n\r\nexport const NotificationContainer = styled.div`\r\n  color: #fff;\r\n  background: ${props => props.type === 'alert' ? 'red' : 'green'};\r\n  font-size: 20px;\r\n  border-style: solid;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n`;","import { NotificationContainer } from \"./NotificationElements\"\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <NotificationContainer type = {notification.type} id='notification'>\r\n      {notification.message}\r\n    </NotificationContainer>\r\n  )\r\n}\r\n\r\nexport default Notification","import styled from 'styled-components';\r\n\r\nexport const LoginFormContainer = styled.div`\r\n  background: gold;\r\n  border-radius: 10px;\r\n  padding: 40px;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.9);\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    padding: 5px 5px;\r\n`; \r\n\r\nexport const LoginFormH2 = styled.h2`\r\n  font-size: 2rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const LoginFormP = styled.p`\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const LoginFormItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const LoginFormForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LoginFormInputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const LoginFormInput = styled.input`\r\n  padding: 10px;\r\n  margin: 5px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n  font-size: 1rem;\r\n  font-size: 2rem;\r\n`;\r\n\r\nexport const LoginFormButton = styled.button`\r\n  padding: 10px;\r\n  margin: 5px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  background: #06260F;\r\n  color: gold;\r\n  cursor: pointer;\r\n  font-size: 2rem;\r\n`;","import { useState } from 'react'\r\nimport { \r\n  LoginFormContainer,\r\n  LoginFormH2,\r\n  LoginFormP,\r\n  LoginFormItemWrapper,\r\n  LoginFormForm,\r\n  LoginFormInputWrapper,\r\n  LoginFormInput,\r\n  LoginFormButton\r\n} from './LoginFormElements'\r\n\r\nconst LoginForm = ({ onLogin }) => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    onLogin(username, password)\r\n  }\r\n\r\n  return (\r\n    <LoginFormContainer>\r\n      <LoginFormH2>Kirjaudu Sisään</LoginFormH2>\r\n      <LoginFormItemWrapper> \r\n        <LoginFormForm onSubmit={handleSubmit}>\r\n          <LoginFormInputWrapper>\r\n            <LoginFormP>Käyttäjätunnus</LoginFormP>\r\n            <LoginFormInput\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              id='username'\r\n            />\r\n          </LoginFormInputWrapper>\r\n          <LoginFormInputWrapper>\r\n            <LoginFormP>Salasana</LoginFormP>\r\n            <LoginFormInput\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              id=\"password\"\r\n            />\r\n          </LoginFormInputWrapper>\r\n          <LoginFormInputWrapper>\r\n            <LoginFormButton id=\"login-button\" type=\"submit\">\r\n              Login\r\n            </LoginFormButton>\r\n          </LoginFormInputWrapper>\r\n        </LoginFormForm>\r\n      </LoginFormItemWrapper>\r\n    </LoginFormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import styled from 'styled-components';\r\n\r\nexport const InputFormButton = styled.button`\r\n  padding: 10px;\r\n  margin: 5px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  background: ${props => props.background === 'add' ? '#06260F' : '#84172C'};\r\n  color: gold;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    transform: scale(1.01);\r\n    box-shadow: 0 1px 3px rgba(255, 203, 5, 0.9);\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nexport const InputFormH2 = styled.h2`\r\n  font-size: 3rem;\r\n  color: #06260F;\r\n  text-align: center;\r\n  color: gold;\r\n  font-weight: bold;\r\n  text-shadow: 1px 1px 0px rgba(0, 0, 0, 1);\r\n`;\r\n\r\nexport const InputFormP = styled.p`\r\n`;\r\n\r\nexport const InputFormForm = styled.form`\r\n`;\r\n\r\nexport const InputFormItems = styled.div`\r\n  width: 100%;\r\n  padding: 5px;\r\n  font-size: 1.5rem;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.8rem;\r\n  }\r\n`;\r\n\r\nexport const InputFormInput = styled.input`\r\n  width: 100%;\r\n  max-width: 300px;\r\n  padding: 10px;\r\n  margin: 5px;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  background: #FFFFE0;\r\n  color: #32231F;\r\n  font-weight: bold;\r\n  border: 1px solid gold;\r\n  text-align: center;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nexport const InputFormLabel = styled.label` \r\n// width: 100%;\r\n  // max-width: 300px;\r\n  // padding: 10px;\r\n  // margin: 5px;\r\n  // border-radius: 5px;\r\n  // font-size: 1rem;\r\n  // background: #FFFFE0;\r\n  // color: #32231F;\r\n  // font-weight: bold;\r\n  // border: 1px solid gold;\r\n  // text-align: center;\r\n\r\n  // @media screen and (max-width: 500px) {\r\n  //   font-size: 1.5rem;\r\n  //   height: 60px;\r\n  // }\r\n`;\r\n\r\nexport const InputFormSelect = styled.select`\r\n  width: 100%;\r\n  max-width: 300px;\r\n  padding: 10px;\r\n  margin: 5px;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  background: #FFFFE0;\r\n  color: #32231F;\r\n  font-weight: bold;\r\n  border: 1px solid gold;\r\n  text-align: center;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nexport const InputFormOption = styled.option`\r\n  // width: 100%;\r\n  // max-width: 300px;\r\n  // margin: 5px;\r\n  // border-radius: 5px;\r\n  // font-size: 1rem;\r\n  // background: #FFFFE0;\r\n  // color: #32231F;\r\n  // font-weight: bold;\r\n  // border: 1px solid gold;\r\n  // text-align: center;\r\n  line-height: 50px;\r\n`;\r\n","import { useState } from 'react'\r\n\r\nimport { \r\n  InputFormButton, \r\n  InputFormH2, \r\n  InputFormP, \r\n  InputFormForm, \r\n  InputFormItems, \r\n  InputFormInput, \r\n} from '../InputFormElements'\r\n\r\nconst NewOpeningHoursForm = ({ createNewHours }) => {\r\n  const [day, setDay] = useState('')\r\n  const [openingHours, setOpeningHours] = useState('')\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newHours = {\r\n      day,\r\n      openinghours: openingHours,\r\n    }\r\n\r\n    createNewHours(newHours)\r\n    \r\n    // Nollataan syöttökentät\r\n    setDay('')\r\n    setOpeningHours('')\r\n  }\r\n\r\n  const handleDayChange = (event) => {\r\n    setDay(event.target.value)\r\n  }\r\n\r\n  const handleHoursChange = (event) => {\r\n    setOpeningHours(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style = {{ marginBottom: '10px' }}>\r\n        <InputFormH2>Lisää uusi</InputFormH2>\r\n        <InputFormH2>aukioloaika</InputFormH2>\r\n      </div>\r\n      <div>\r\n        <InputFormForm onSubmit={handleSubmit}>\r\n          <InputFormItems>\r\n            <InputFormP>Päivä</InputFormP>\r\n            <InputFormInput\r\n              value={day}\r\n              onChange={handleDayChange}\r\n              id='day'\r\n              placeholder='Aseta päivä'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormItems>\r\n            <InputFormP>Aukioloaika</InputFormP>\r\n            <InputFormInput\r\n              value={openingHours}\r\n              onChange={handleHoursChange}\r\n              id='openingHours'\r\n              placeholder='Aseta aukioloaika'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormButton background = 'add' id=\"login-button\" type=\"submit\">\r\n            Lisää\r\n          </InputFormButton>\r\n        </InputFormForm>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewOpeningHoursForm","import { useState } from 'react'\r\n\r\nimport { \r\n  InputFormButton, \r\n  InputFormH2, \r\n  InputFormP, \r\n  InputFormForm, \r\n  InputFormItems, \r\n  InputFormInput, \r\n} from '../InputFormElements'\r\n\r\nconst NewOpeningHoursForm = ({ updateOpeningHours }) => {\r\n  const [day, setDay] = useState('')\r\n  const [openingHours, setOpeningHours] = useState('')\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newHours = {\r\n      day,\r\n      openinghours: openingHours,\r\n    }\r\n\r\n    // createNewHours(newHours)\r\n    \r\n    // Nollataan syöttökentät\r\n    setDay('')\r\n    setOpeningHours('')\r\n  }\r\n\r\n  const handleDayChange = (event) => {\r\n    setDay(event.target.value)\r\n  }\r\n\r\n  const handleHoursChange = (event) => {\r\n    setOpeningHours(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style = {{ marginBottom: '10px' }}>\r\n        <InputFormH2>Päivitä</InputFormH2>\r\n        <InputFormH2>aukioloaika</InputFormH2>\r\n      </div>\r\n      <div>\r\n        <InputFormForm onSubmit={handleSubmit}>\r\n          <InputFormItems>\r\n            <InputFormP>Päivä</InputFormP>\r\n            <InputFormInput\r\n              value={day}\r\n              onChange={handleDayChange}\r\n              id='day'\r\n              placeholder='Aseta päivä'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormItems>\r\n            <InputFormP>Aukioloaika</InputFormP>\r\n            <InputFormInput\r\n              value={openingHours}\r\n              onChange={handleHoursChange}\r\n              id='openingHours'\r\n              placeholder='Aseta aukioloaika'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormButton background = 'add' id=\"login-button\" type=\"submit\">\r\n            Lisää\r\n          </InputFormButton>\r\n        </InputFormForm>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewOpeningHoursForm","import { useState } from 'react'\r\n\r\nimport { \r\n  InputFormButton, \r\n  InputFormH2, \r\n  InputFormP, \r\n  InputFormForm, \r\n  InputFormItems, \r\n  InputFormInput, \r\n  InputFormLabel, \r\n  InputFormSelect, \r\n  InputFormOption\r\n} from '../InputFormElements'\r\n\r\nconst NewBeerForm = ({ createNewBeer }) => {\r\n  const [name, setName] = useState('')\r\n  const [style, setStyle] = useState('')\r\n  const [country, setCountry] = useState('')\r\n  const [price, setPrice] = useState('')\r\n  const [category, setCategory] = useState('')\r\n\r\n  const beerCategories = [\r\n    'Valitse listasta',\r\n    'On Bottle',\r\n    'On Draught',\r\n    'Local Draughts',\r\n    'Regular Draughts',\r\n  ]\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newBeer = {\r\n      name,\r\n      style,\r\n      country,\r\n      price,\r\n      category,\r\n    }\r\n\r\n    if (category === 'Valitse listasta' || !category) {\r\n      alert('Valitse kategoria')\r\n    } else {\r\n\r\n      createNewBeer(newBeer)\r\n\r\n      // Nollataan syöttökentät\r\n      resetStates()\r\n    }\r\n  }\r\n\r\n  const resetStates = () => {\r\n    setName('')\r\n    setStyle('')\r\n    setCountry('')\r\n    setPrice('')\r\n    setCategory('')\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value)\r\n  }\r\n\r\n  const handleStyleChange = (event) => {\r\n    setStyle(event.target.value)\r\n  }\r\n\r\n  const handleCountryChange = (event) => {\r\n    setCountry(event.target.value)\r\n  }\r\n\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value)\r\n  }\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div style = {{ marginBottom: '10px' }}>\r\n        <InputFormH2>Lisää uusi</InputFormH2>\r\n        <InputFormH2>olut</InputFormH2>\r\n      </div>\r\n      <div>\r\n        <InputFormForm onSubmit={handleSubmit}>\r\n          <InputFormItems>\r\n            <InputFormP>Nimi</InputFormP>\r\n            <InputFormInput\r\n              value={name}\r\n              onChange={handleNameChange}\r\n              id='name'\r\n              placeholder='Oluen nimi'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormItems>\r\n            <InputFormP>Tyyppi</InputFormP>\r\n            <InputFormInput\r\n              value={style}\r\n              onChange={handleStyleChange}\r\n              id='style'\r\n              placeholder='Oluen tyyppi esim. IPA'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormItems>\r\n            <InputFormP>Maa</InputFormP>\r\n            <InputFormInput\r\n              value={country}\r\n              onChange={handleCountryChange}\r\n              id='country'\r\n              placeholder='Oluen kotimaa'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormItems>\r\n            <InputFormP>Hinta</InputFormP>\r\n            <InputFormInput\r\n              value={price}\r\n              onChange={handlePriceChange}\r\n              id='price'\r\n              placeholder='Oluen hinta'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormItems>\r\n            <InputFormLabel>Kategoria</InputFormLabel>\r\n            <InputFormSelect value={category} onChange={handleCategoryChange}>\r\n              {beerCategories.map(beerArea => (\r\n                <InputFormOption key={beerArea} value={beerArea}>{beerArea}</InputFormOption>\r\n              ))}\r\n            </InputFormSelect>\r\n          </InputFormItems>\r\n           <InputFormButton background = 'add' id=\"login-button\" type=\"submit\">\r\n             Lisää\r\n           </InputFormButton>\r\n         </InputFormForm>\r\n       </div>\r\n     </div>\r\n   )\r\n}\r\n\r\nexport default NewBeerForm","import { useState } from 'react'\r\n\r\nimport { \r\n  InputFormButton, \r\n  InputFormH2, \r\n  InputFormP, \r\n  InputFormForm, \r\n  InputFormItems, \r\n  InputFormInput, \r\n  InputFormLabel, \r\n  InputFormSelect, \r\n  InputFormOption\r\n} from '../InputFormElements'\r\n\r\nconst NewWhiskyForm = ({ createNewWhisky }) => {\r\n  const [name, setName] = useState('')\r\n  const [area, setArea] = useState('')\r\n  const [price, setPrice] = useState('')\r\n\r\n\r\n  const whiskyAreas = [\r\n    'Valitse listasta',\r\n    'Highland',\r\n    'Lowland',\r\n    'Campbeltown',\r\n    'Irish',\r\n    'Japan',\r\n    'Islands',\r\n    'Other Countries / Bourbons',\r\n    'Uutuudet',\r\n  ]\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const newWhisky = {\r\n      name,\r\n      area,\r\n      price,\r\n    }\r\n\r\n    if (area === 'Valitse listasta' || !area) {\r\n      alert('Valitse alue')\r\n    } else {\r\n\r\n      createNewWhisky(newWhisky, area)\r\n\r\n      // Nollataan syöttökentät\r\n      resetStates()\r\n    }\r\n  }\r\n\r\n  const resetStates = () => {\r\n    setName('')\r\n    setArea('')\r\n    setPrice('')\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value)\r\n  }\r\n\r\n  const handleAreaChange = (event) => {\r\n    setArea(event.target.value)\r\n  }\r\n\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style = {{ marginBottom: '10px' }}>\r\n        <InputFormH2>Lisää uusi</InputFormH2>\r\n        <InputFormH2>viski</InputFormH2>\r\n      </div>\r\n      <div>\r\n        <InputFormForm onSubmit={handleSubmit}>\r\n          <InputFormItems>\r\n            <InputFormP>Nimi</InputFormP>\r\n            <InputFormInput\r\n              value={name}\r\n              onChange={handleNameChange}\r\n              id='name'\r\n              placeholder='Viskin nimi'\r\n            />\r\n          </InputFormItems>\r\n          <InputFormItems>\r\n            <InputFormLabel>Alue</InputFormLabel>\r\n            <InputFormSelect value={area} onChange={handleAreaChange}>\r\n              {whiskyAreas.map((area) => (\r\n                <InputFormOption key={area} value={area}>{area}</InputFormOption>\r\n              ))}\r\n            </InputFormSelect>\r\n          </InputFormItems>\r\n          <InputFormItems>\r\n            <InputFormP>Hinta</InputFormP>\r\n            <InputFormInput\r\n              value={price}\r\n              onChange={handlePriceChange}\r\n              id='price'\r\n              placeholder='Hinta'\r\n            />\r\n          </InputFormItems>\r\n          <div>\r\n            <InputFormButton background = 'add' id='submit-button' type='submit'>Lisää</InputFormButton>\r\n          </div>\r\n        </InputFormForm>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewWhiskyForm","import axios from 'axios'\r\nimport { getBaseUrl } from '../utils/utils'\r\n\r\nconst baseUrl = `${getBaseUrl()}/login`\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import axios from 'axios'\r\nimport userService from './user'\r\nimport { getBaseUrl } from '../utils/utils'\r\n\r\nconst baseUrl = `${getBaseUrl()}/beer`\r\n\r\nconst config = () => {\r\n  return {\r\n    headers: {\r\n      Authorization: `bearer ${userService.getToken()}`\r\n    }\r\n  }\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const response = await axios.post(baseUrl, newObject, config())\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config())\r\n  return response.data\r\n}\r\n\r\nexport default { create, remove, }","import axios from 'axios'\r\nimport userService from './user'\r\nimport { getBaseUrl } from '../utils/utils'\r\n\r\nconst baseUrl = `${getBaseUrl()}/whisky`\r\n\r\nconst config = () => {\r\n  return {\r\n    headers: {\r\n      Authorization: `bearer ${userService.getToken()}`\r\n    }\r\n  }\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async (newObject) => {\r\n  const response = await axios.post(baseUrl, newObject, config())\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config())\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, remove, }\r\n","import axios from 'axios'\r\nimport userService from './user'\r\nimport { getBaseUrl } from '../utils/utils'\r\n\r\nconst baseUrl = `${getBaseUrl()}/csv`\r\n\r\nconst config = () => {\r\n  return {\r\n    headers: {\r\n      Authorization: `bearer ${userService.getToken()}`\r\n    }\r\n  }\r\n}\r\n\r\nconst upload = async (csvfile) => {\r\n  console.log('csvfile', csvfile)\r\n\r\n  if (csvfile) {\r\n    const formData = new FormData()\r\n    formData.append('csvfile', csvfile)\r\n    const response = await axios.post(baseUrl, formData, config())\r\n    return response.data\r\n  }\r\n  \r\n}\r\n\r\nexport default { upload, }","import styled from 'styled-components';\r\n\r\nexport const LoginPageContainer = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nexport const LoginPageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-top: 80px;\r\n  padding-bottom: 30px;\r\n  color: gold;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const LoginPageH1 = styled.h1`\r\n  font-size: 2rem;\r\n  margin-top: 20px;\r\n  margin-bottom: 10px;\r\n  color: gold;\r\n  text-shadow: 1px 1px 0px rgba(0, 0, 0, 1);\r\n`;\r\n\r\nexport const LoginPageP = styled.p`\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    padding: 15px 15px;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nexport const LoginPageH3 = styled.h3`\r\n  font-size: 3rem;\r\n  margin-top: 40px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const LoginPageGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  grid-gap: 1rem;\r\n  padding: 10px;\r\n  // margin: 20px;\r\n  // border-radius: 5px;\r\n  background: #06260F;\r\n  width: 100%;\r\n  text-align: center;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n    padding: 5px 5px;\r\n  }\r\n`;\r\n\r\nexport const LoginPageGridItem = styled.div`\r\n  border: 1px solid #32231F;\r\n  background: #A69666; \r\n  color: #32231F;\r\n  padding: 10px;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n  \r\n\r\n  @media screen and (max-width: 500px) {\r\n    padding: 5px 5px;\r\n  }\r\n`;\r\n\r\nexport const LoginPageButton = styled.button`\r\n  padding: 10px;\r\n  margin: 5px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  background: ${props => props.background === 'light' ? '#06260F' : '#A69666'};\r\n  color: ${props => props.background === 'light' ? 'gold' : '#06260F'};\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    transform: scale(1.01);\r\n    box-shadow: 0 1px 3px rgba(255, 203, 5, 0.9);\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n    height: 60px;\r\n  }\r\n`;\r\n\r\nexport const LoginPageInputForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  font-weight: bold;\r\n  color: #32231F;\r\n  background: #A69666;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const LoginPageRemoveButton = styled.button`\r\n  padding: 10px;\r\n  margin: 5px;\r\n  width: 100%;\r\n  max-width: 300px;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  background: #84172C;\r\n  color: gold; //#EFBC69;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    transition: all 0.2s ease-in-out;\r\n    transform: scale(1.01);\r\n    box-shadow: 0 1px 3px rgba(255, 203, 5, 0.9);\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 1.5rem;\r\n    height: 60px;\r\n  }\r\n`;\r\n","import { useState, useEffect, useRef } from 'react'\r\n\r\nimport Togglable from \"../components/Togglable\"\r\nimport Notification from \"../components/Notification\"\r\nimport LoginForm from \"../components/LoginForm\"\r\nimport NewOpeningHoursForm from \"../components/AdminPageForms/NewOpeningHoursForm\"\r\nimport UpdateOpeningHoursForm from \"../components/AdminPageForms/UpdateOpeningHoursForm\"\r\nimport NewBeerForm from \"../components/AdminPageForms/NewBeerForm\"\r\nimport NewWhiskyForm from \"../components/AdminPageForms/NewWhiskyForm\"\r\n\r\nimport loginService from '../services/login'\r\nimport userService from '../services/user'\r\nimport beersService from '../services/beers'\r\nimport beerService from '../services/beer'\r\nimport whiskiesService from '../services/whiskies'\r\nimport whiskyService from '../services/whisky'\r\nimport openingHoursService from '../services/openinghours'\r\nimport whiskyCsvService from '../services/whiskyCsv'\r\n\r\nimport { checkIfFileIsCsv } from '../utils/utils'\r\n\r\nimport { \r\n  LoginPageContainer,\r\n  LoginPageH1,\r\n  LoginPageH3,\r\n  LoginPageP,\r\n  LoginPageGrid,\r\n  LoginPageGridItem,\r\n  LoginPageButton,\r\n  LoginPageInputForm,\r\n  LoginPageRemoveButton,\r\n  LoginPageWrapper\r\n} from '../components/LoginPageStyledComponents/LoginPageElements'\r\n\r\nconst loginWrapper = {\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  height: '100vh'\r\n}\r\n\r\nconst OpeningHoursList = ({ openingHour, removeOpeningHour }) => {\r\n  return (\r\n    <div key={openingHour.id}>\r\n      <LoginPageP><b>{openingHour.day}</b></LoginPageP>\r\n      <LoginPageP>{openingHour.openinghours}</LoginPageP>\r\n      <LoginPageRemoveButton background = 'light' onClick = {() => removeOpeningHour(openingHour.id)}>\r\n        Poista\r\n      </LoginPageRemoveButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ItemList = ({ product, remove }) => {\r\n  const [showAll, setShowAll] = useState(false)\r\n\r\n  if (showAll) {\r\n    return(\r\n      <div style = {{ marginBottom: '25px' }}>\r\n        <FullItemList product={product} remove={remove} setShowAll={setShowAll} />\r\n        <LoginPageRemoveButton background = 'light' onClick = {() => remove(product.id, product)}>Poista</LoginPageRemoveButton>\r\n        <LoginPageButton background = 'light' onClick = {() => setShowAll(false)}>Piilota</LoginPageButton>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style = {{ marginBottom: '25px' }} key={product.id}>\r\n      <LoginPageP><b>{product.name}</b></LoginPageP>\r\n      <div>     \r\n        <LoginPageRemoveButton background = 'light' onClick = {() => remove(product.id, product)}>Poista</LoginPageRemoveButton>\r\n        <LoginPageButton background = 'light' onClick = {() => setShowAll(true)}>Näytä kaikki</LoginPageButton>\r\n      </div>      \r\n    </div>\r\n  )\r\n}\r\n\r\nconst FullItemList = ({ product, remove }) => {\r\n  return (\r\n    <div style = {{ marginBottom: '25px' }} key={product.id}>\r\n      <LoginPageP><b>{product.name}</b></LoginPageP>\r\n      <LoginPageP><b>{product.price}</b></LoginPageP>\r\n      <LoginPageP><b>{product?.area}</b></LoginPageP>\r\n      <LoginPageP><b>{product?.style}</b></LoginPageP>\r\n      <LoginPageP><b>{product?.country}</b></LoginPageP>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Login = () => {\r\n  const [user, setUser] = useState(null)\r\n  const [notification, setNotification] = useState(null)\r\n  const [beers, setBeers] = useState([])\r\n  const [whiskies, setWhiskies] = useState([])\r\n  const [openingHours, setOpeningHours] = useState([])\r\n  const [file, setFile] = useState(null)\r\n\r\n  const beerFormRef = useRef()\r\n  const whiskyFormRef = useRef()\r\n  const openingHoursFormRef = useRef()\r\n  const openingHoursUpdateRef = useRef()\r\n\r\n  // Get logged in user from localStorage\r\n  useEffect(() => {\r\n    const userFromStorage = userService.getUser()\r\n    if (userFromStorage) {\r\n      setUser(userFromStorage)\r\n    }\r\n  }, [])\r\n\r\n  // Handle user login\r\n  const login = async (username, password) => {\r\n    loginService.login({\r\n      username, password,\r\n    }).then(user => {\r\n      setUser(user)\r\n      userService.setUser(user)\r\n      notify(`Login succesful! Welcome ${user.name}!`)\r\n    }).catch(() => {\r\n      notify('Wrong credentials', 'alert')\r\n    })\r\n  }\r\n\r\n  // Handle user logout\r\n  const logout = () => {\r\n    setUser(null)\r\n    userService.clearUser()\r\n  }\r\n\r\n  // Get all beers from db  \r\n  useEffect(() => {\r\n    beersService.getAll()\r\n      .then(beers => {\r\n        setBeers(beers);\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }, []);\r\n\r\n  // Get all whiskies from db\r\n  useEffect(() => {\r\n    whiskiesService.getAll()\r\n      .then(whiskies => {\r\n        setWhiskies(whiskies)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  // Get all opening hours from db\r\n  useEffect(() => {\r\n    openingHoursService.getAll()\r\n      .then(openingHours => {\r\n        setOpeningHours(openingHours)\r\n      }).catch(error => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  // Create new beer\r\n  const createBeer = (newBeer) => {\r\n    beerService.create(newBeer).then(returnedBeer => {\r\n      setBeers(beers.map(beer => {\r\n        if (beer.name === newBeer.category) {\r\n          beer.products.push(returnedBeer)\r\n        }\r\n        return beer\r\n      }))\r\n      notify(`Lisätty ${returnedBeer.name}`)\r\n      beerFormRef.current.toggleVisibility()\r\n    }).catch(exception => { \r\n      notify(exception.response.data.error, 'alert')\r\n      console.log('Exception: ', exception)\r\n    })\r\n  }\r\n\r\n  // Create new whisky\r\n  const createWhisky = (newWhisky) => {\r\n    whiskyService.create(newWhisky).then(returnedWhisky => {\r\n      setWhiskies(whiskies.map(whisky => {\r\n        if (whisky.name === newWhisky.area) {\r\n          whisky.whiskies.push(returnedWhisky)\r\n        }\r\n        return whisky\r\n      }))\r\n      notify(`Lisätty ${returnedWhisky.name}!`)\r\n      whiskyFormRef.current.toggleVisibility()\r\n    }).catch(exception => {\r\n      notify('Tapahtui virhe', 'alert')\r\n      console.log('Exception: ', exception)\r\n    })\r\n  }\r\n\r\n  // Create new opening hours\r\n  const createOpeningHours = (newOpeningHours) => {\r\n    openingHoursService\r\n      .create(newOpeningHours)\r\n      .then(returnedOpeningHours => {\r\n        setOpeningHours(openingHours.concat(returnedOpeningHours))\r\n        notify(`Lisätty ${returnedOpeningHours.day} ${returnedOpeningHours.openinghours}`)\r\n        openingHoursFormRef.current.toggleVisibility()\r\n      }).catch(exception => {\r\n        notify(`${exception.response.data.error}`, 'alert')\r\n        console.log('Exception: ', exception)\r\n      })\r\n  }\r\n\r\n  // Upload whiskies from csv file\r\n  const uploadWhiskies = (file) => {\r\n    if (file === null) {\r\n      notify('Valitse tiedosto', 'alert')\r\n      return\r\n    }\r\n    \r\n    if (checkIfFileIsCsv(file)) {\r\n\r\n      whiskyCsvService\r\n        .upload(file)\r\n        .then(returnedWhiskies => {\r\n          console.log('old whiskies: ', whiskies)\r\n          // iterate through old whiskies and add new whiskies to them\r\n          setWhiskies(whiskies.map(whisky => {\r\n            if (whisky.name === returnedWhiskies[0].area) {\r\n              whisky.whiskies = whisky.whiskies.concat(returnedWhiskies)\r\n            }\r\n            return whisky\r\n          }))  \r\n          \r\n          notify(`Ladattu ${returnedWhiskies.length} tuotetta! Päivitä selain heten kuluttua!`)\r\n          setFile(() => null)\r\n\r\n        }).catch(exception => {\r\n\r\n          notify(`${exception}`, 'alert')\r\n          console.log('Exception: ', exception)\r\n\r\n        })\r\n    } else {\r\n      notify(`Väärä tiedostomuoto!`, 'alert')\r\n    }    \r\n  }\r\n\r\n  // Remove beer from db\r\n  const removeBeer = (id, beerCategory) => {\r\n\r\n    const ok = window.confirm(`Poistetaanko ${beerCategory.name} ?`)\r\n\r\n    if (!ok) {\r\n      return\r\n    }\r\n    \r\n    // Find the correct sub array from beers\r\n    const filteredBeers = beers.find(beer => beer.products.find(product => product.category === beerCategory.category))\r\n    \r\n    // Remove old entry from array\r\n    const newBeersCategory = filteredBeers.products.filter(beer => beer.id !== id)\r\n\r\n    const updatedBeers = {\r\n      name: filteredBeers.name,\r\n      products: newBeersCategory,\r\n      id: filteredBeers.id,\r\n    }\r\n\r\n    beerService.remove(id).then(() => {\r\n      setBeers(beers.map(beer => beer.id === updatedBeers.id ? updatedBeers : beer))\r\n      notify(`${beerCategory.name} poistettu!`)\r\n    }).catch(exception => {\r\n      notify(`${exception.response.data.error}`, 'alert')\r\n      console.log('Exception: ', exception)\r\n    })\r\n  }\r\n\r\n  // Remove whisky from db\r\n  const removeWhisky = (id, whiskyArea ) => {\r\n\r\n    const ok = window.confirm(`Poistetaanko ${whiskyArea.name} ?`)\r\n\r\n    if (!ok) {\r\n      return\r\n    }\r\n\r\n    // Find the correct sub array from whiskies\r\n    const filteredWhiskies = whiskies.find(whisky => whisky.whiskies.find(product => product.area === whiskyArea.area))\r\n\r\n    // Remove old entry from array\r\n    const newWhiskiesArea = filteredWhiskies.whiskies.filter(whisky => whisky.id !== id)\r\n\r\n    const updatedWhiskies = {\r\n      name: filteredWhiskies.name,\r\n      whiskies: newWhiskiesArea,\r\n      id: filteredWhiskies.id,\r\n    }\r\n\r\n    whiskyService.remove(id).then(() => {\r\n      setWhiskies(whiskies.map(whisky => whisky.id === updatedWhiskies.id ? updatedWhiskies : whisky))\r\n      notify(`${whiskyArea.name} poistettu!`)\r\n    }).catch(exception => {\r\n      notify(`${exception.response.data.error}`, 'alert')\r\n      console.log('Exception: ', exception)\r\n    })\r\n  }\r\n\r\n  // Remove opening hours from db\r\n  const removeOpeningHours = (id) => {\r\n    const toRemove = openingHours.find(openingHour => openingHour.id === id)\r\n\r\n    const ok = window.confirm(`Poistetaanko ${toRemove.day} ${toRemove.openinghours}?`)\r\n\r\n    if (!ok) {\r\n      return\r\n    }\r\n    \r\n    openingHoursService.remove(id).then(() => {\r\n      setOpeningHours(openingHours.filter(openingHours => openingHours.id !== id))\r\n      notify(`${toRemove.day} ${toRemove.openinghours} poistettiin onnistuneesti!`)      \r\n    }).catch(exception => {\r\n      notify('Tapahtui virhe', 'alert')\r\n    })\r\n  }\r\n\r\n  // Update opening hours\r\n  const updateOpeningHours = (id, newOpeningHours) => {\r\n    openingHoursService\r\n      .update(id, newOpeningHours)\r\n      .then(returnedOpeningHours => {\r\n        setOpeningHours(openingHours.map(openingHours => openingHours.id !== id ? openingHours : returnedOpeningHours))\r\n        notify(`Muokattiin ${returnedOpeningHours.day} ${returnedOpeningHours.openinghours}`)\r\n      }).catch(exception => {\r\n        notify(`${exception.response.data.error}`, 'alert')\r\n        console.log('Exception: ', exception)\r\n      })\r\n  }\r\n\r\n  const notify = (message, type = 'info') => {\r\n    setNotification({ message, type })\r\n    setTimeout(() => {\r\n      setNotification(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const handleFileChange = (event) => {\r\n    setFile(event.target.files[0])\r\n  }\r\n\r\n  // Alphabetically sorted beers\r\n  const sortedBeers = beers.map(beer => {\r\n    beer.products.sort((a, b) => a.name.localeCompare(b.name))\r\n    return beer\r\n  })\r\n  \r\n  const sortedWhiskies = whiskies.map(whisky => {\r\n    whisky.whiskies.sort((a, b) => a.name.localeCompare(b.name))\r\n    return whisky\r\n  })\r\n\r\n  if (user === null) {\r\n    return (\r\n      <div style={loginWrapper}>\r\n        <div>\r\n          <Notification notification={notification} />\r\n          <LoginForm onLogin={login} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <LoginPageContainer>\r\n      <LoginPageWrapper>\r\n        <Notification notification={notification} />        \r\n        <LoginPageP>{user.name} logged in</LoginPageP>\r\n        <LoginPageButton background = 'dark' onClick={logout}>Logout</LoginPageButton>\r\n      </LoginPageWrapper>\r\n      <div className=\"csv-file-upload\">\r\n        <LoginPageInputForm>\r\n          <LoginPageH1>Lataa Excelin csv-tiedosto</LoginPageH1>\r\n          <input type=\"file\" accept='.csv' lang='fin' onChange={handleFileChange} />\r\n          <LoginPageButton background = 'light' onClick={() => uploadWhiskies(file)}>Upload</LoginPageButton>\r\n        </LoginPageInputForm>\r\n      </div>\r\n      <LoginPageGrid>\r\n        <div>\r\n          <LoginPageInputForm>\r\n            <LoginPageH1>Aukioloajat</LoginPageH1>\r\n            <Togglable buttonLabel='Uusi aika' ref = {openingHoursFormRef} >\r\n              <NewOpeningHoursForm createNewHours = {createOpeningHours} />\r\n            </Togglable>\r\n            <Togglable buttonLabel='Päivitä aika' ref = {openingHoursUpdateRef} >\r\n              <UpdateOpeningHoursForm updateOpeningHours = {updateOpeningHours} />\r\n            </Togglable>\r\n          </LoginPageInputForm>\r\n          <LoginPageGridItem>\r\n            {openingHours.map(openingHours =>\r\n              <OpeningHoursList \r\n                key = {openingHours.id} \r\n                openingHour = {openingHours} \r\n                removeOpeningHour = {removeOpeningHours} \r\n              />\r\n            )}\r\n          </LoginPageGridItem>\r\n        </div>      \r\n        <div>\r\n          <LoginPageInputForm>\r\n            <div style = {{justifyContent: 'center'}}>\r\n              <LoginPageH1>Hanatuotteet</LoginPageH1>\r\n            </div>\r\n            <Togglable buttonLabel='Uusi olut' ref = {beerFormRef}>\r\n              <NewBeerForm createNewBeer={createBeer} />\r\n            </Togglable>\r\n          </LoginPageInputForm>\r\n          <LoginPageGridItem>\r\n            {sortedBeers.map(beer =>\r\n              <div style = {{ paddingTop: '10px' }} key={beer.id}>\r\n                <LoginPageH3>{beer.name}</LoginPageH3>\r\n                {beer.products.map(product =>\r\n                  <ItemList key = {product.id} product = {product} remove = {removeBeer} />\r\n                )}\r\n              </div>\r\n            )}\r\n          </LoginPageGridItem>\r\n        </div>\r\n        <div>\r\n          <LoginPageInputForm>\r\n            <LoginPageH1>Viskilista</LoginPageH1>\r\n            <Togglable buttonLabel='Uusi viski' ref = {whiskyFormRef} >\r\n              <NewWhiskyForm createNewWhisky = {createWhisky} />\r\n            </Togglable>\r\n          </LoginPageInputForm>\r\n          <LoginPageGridItem>\r\n            {sortedWhiskies.map(whisky =>\r\n              <div key={whisky.name}>\r\n                <LoginPageH3>{whisky.name}</LoginPageH3>\r\n                {whisky.whiskies.map(product =>\r\n                  <ItemList key = {product.id} product = {product} remove = {removeWhisky} />\r\n                )}\r\n              </div>\r\n              )}\r\n          </LoginPageGridItem>          \r\n        </div>\r\n      </LoginPageGrid>\r\n    </LoginPageContainer>\r\n  )\r\n}\r\n\r\nexport default Login"],"names":["TogglableButton","styled","props","background","Togglable","forwardRef","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","displayName","NotificationContainer","type","notification","id","message","LoginFormContainer","LoginFormH2","LoginFormP","LoginFormItemWrapper","LoginFormForm","LoginFormInputWrapper","LoginFormInput","LoginFormButton","onLogin","username","setUsername","password","setPassword","onSubmit","event","preventDefault","value","onChange","target","InputFormButton","InputFormH2","InputFormP","InputFormForm","InputFormItems","InputFormInput","InputFormLabel","InputFormSelect","InputFormOption","createNewHours","day","setDay","openingHours","setOpeningHours","marginBottom","openinghours","placeholder","updateOpeningHours","createNewBeer","name","setName","setStyle","country","setCountry","price","setPrice","category","setCategory","resetStates","alert","map","beerArea","createNewWhisky","area","setArea","baseUrl","getBaseUrl","login","credentials","axios","response","data","config","headers","Authorization","userService","create","newObject","remove","getAll","then","upload","csvfile","console","log","formData","FormData","append","LoginPageContainer","LoginPageWrapper","LoginPageH1","LoginPageP","LoginPageH3","LoginPageGrid","LoginPageGridItem","LoginPageButton","LoginPageInputForm","LoginPageRemoveButton","loginWrapper","flexDirection","alignItems","justifyContent","height","OpeningHoursList","openingHour","removeOpeningHour","ItemList","product","showAll","setShowAll","FullItemList","user","setUser","setNotification","beers","setBeers","whiskies","setWhiskies","file","setFile","beerFormRef","useRef","whiskyFormRef","openingHoursFormRef","openingHoursUpdateRef","useEffect","userFromStorage","loginService","notify","catch","beersService","error","whiskiesService","openingHoursService","removeBeer","beerCategory","window","confirm","filteredBeers","find","beer","products","newBeersCategory","filter","updatedBeers","beerService","exception","removeWhisky","whiskyArea","filteredWhiskies","whisky","newWhiskiesArea","updatedWhiskies","whiskyService","removeOpeningHours","toRemove","setTimeout","sortedBeers","sort","a","b","localeCompare","sortedWhiskies","className","accept","lang","files","checkIfFileIsCsv","whiskyCsvService","returnedWhiskies","concat","length","uploadWhiskies","newOpeningHours","returnedOpeningHours","current","UpdateOpeningHoursForm","newBeer","returnedBeer","push","paddingTop","newWhisky","returnedWhisky"],"sourceRoot":""}